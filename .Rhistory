})
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(colour="black", fill="gray80") +
xlab("Frequenza") +
ylab("log(Concentrazione)")
})
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(colour="black", fill="gray80") +
stat_function(fun = dnorm, aes(colour = "Normale"))
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(colour="black", fill="gray80") +
stat_function(fun = dnorm, aes(colour = "Normale")) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
apply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(colour="black", fill="gray80") +
stat_function(fun = dnorm, aes(colour = "Normale")) +
ylab("Frequenza") +
xlab("log(Concentrazione)") +
stat_function(fun = dnorm, args = list(mean = mean(x$log.fe), sd = sd(x$log.fe)))
})
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(colour="black", fill="gray80") +
stat_function(fun = dnorm, aes(colour = "Normale")) +
ylab("Frequenza") +
xlab("log(Concentrazione)") +
stat_function(fun = dnorm, args = list(mean = mean(x$log.fe), sd = sd(x$log.fe)))
})
x
mean(x$lof.ge)
mean(x$log.fe)
sd(x$log.fe)
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(colour="black", fill="gray80") +
stat_function(fun = dnorm, aes(colour = "Normale")) +
ylab("Frequenza") +
xlab("log(Concentrazione)") +
stat_function(fun = dnorm, args =list(mean = 4, sd = 2))
})
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(colour="black", fill="gray80") +
stat_function(fun = dnorm, args =list(mean = mean(x$log.fe), sd = sd(x$log.fe)), aes(colour = "Normale")) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
scale_y_continuous(labels=percent) +
geom_histogram(colour="black", fill="gray80") +
stat_function(fun = dnorm, args =list(mean = mean(x$log.fe), sd = sd(x$log.fe)), aes(colour = "Normale")) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
require(scales)
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
scale_y_continuous(labels=percent) +
geom_histogram(colour="black", fill="gray80") +
stat_function(fun = dnorm, args =list(mean = mean(x$log.fe), sd = sd(x$log.fe)), aes(colour = "Normale")) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
scale_y_continuous() +
geom_histogram(colour="black", fill="gray80") +
stat_function(fun = dnorm, args =list(mean = mean(x$log.fe), sd = sd(x$log.fe)), aes(colour = "Normale")) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
i <- 1
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
scale_y_continuous(formatter = "percent") +
geom_histogram(colour="black", fill="gray80") +
stat_function(fun = dnorm, args =list(mean = mean(x$log.fe), sd = sd(x$log.fe)), aes(colour = "Normale")) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
i <- 1
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
scale_y_continuous(formatter = "percent") +
geom_histogram(colour="black", fill="gray80") +
stat_function(fun = dnorm, args =list(mean = mean(x$log.fe), sd = sd(x$log.fe)), aes(colour = "Normale")) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
scale_y_continuous(labels = percent_format()) +
geom_histogram(colour="black", fill="gray80") +
stat_function(fun = dnorm, args =list(mean = mean(x$log.fe), sd = sd(x$log.fe)), aes(colour = "Normale")) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe, y=..density..)) +
scale_y_continuous(labels = percent_format()) +
geom_histogram(colour="black", fill="gray80") +
stat_function(fun = dnorm, args =list(mean = mean(x$log.fe), sd = sd(x$log.fe)), aes(colour = "Normale")) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe, y=..count..)) +
scale_y_continuous(labels = percent_format()) +
geom_histogram(colour="black", fill="gray80") +
stat_function(fun = dnorm, args =list(mean = mean(x$log.fe), sd = sd(x$log.fe)), aes(colour = "Normale")) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(aes(y=..density..),colour="black", fill="gray80", ) +
stat_function(fun = dnorm, args =list(mean = mean(x$log.fe), sd = sd(x$log.fe)), aes(colour = "Normale")) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(aes(y=..density..),colour="black", fill="gray80", ) +
stat_function(fun = dnorm, args =list(mean = mean(x$log.fe), sd = sd(x$log.fe)), aes(colour = "Normale")) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(aes(y=..density..),colour="black", fill="gray80", binwidth=0.5) +
stat_function(fun = dnorm, args =list(mean = mean(x$log.fe), sd = sd(x$log.fe)), aes(colour = "Normale")) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(aes(y=..density..),colour="black", fill="gray80", binwidth=0.5) +
stat_function(fun = dnorm, args =list(mean = mean(x$log.fe), sd = sd(x$log.fe)), aes(size=2, colour = "Normale")) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(aes(y=..density..),colour="black", fill="gray80", binwidth=0.5) +
stat_function(fun = dnorm, args =list(mean = mean(x$log.fe), sd = sd(x$log.fe)), aes(size=1.25, fill="black", colour = "Normale")) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(aes(y=..density..),colour="black", fill="gray80", binwidth=0.5) +
stat_function(fun = dnorm, args =list(mean = mean(x$log.fe), sd = sd(x$log.fe)), aes(size=1, fill="black", colour = "Normale")) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(aes(y=..density..),colour="black", fill="gray80", binwidth=0.5) +
stat_function(fun = dnorm, args =list(mean = mean(x$log.fe), sd = sd(x$log.fe))) +
geom_line(aes(size=1, fill="black", colour = "Normale"))
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
# qplot
i <- 1
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(aes(y=..density..),colour="black", fill="gray80", binwidth=0.5) +
stat_function(fun = dnorm, args =list(mean = mean(x$log.fe), sd = sd(x$log.fe))) +
geom_line(aes(size=1, fill="black", colour = "Normale"))+
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(aes(y=..density..),colour="black", fill="gray80", binwidth=0.5) +
stat_function(fun = dnorm, args =list(mean = mean(x$log.fe), sd = sd(x$log.fe))) +
geom_line(aes(colour = "red"))+
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(aes(y=..density..),colour="black", fill="gray80", binwidth=0.5) +
stat_function(fun = dnorm,
colour="red",
args =list(mean = mean(x$log.fe), sd = sd(x$log.fe))) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(aes(y=..density..),colour="black", fill="gray80", binwidth=0.5) +
stat_function(fun = dnorm,
colour="red",
size=1.2,
args =list(mean = mean(x$log.fe), sd = sd(x$log.fe))) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
i <- 1
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(aes(y=..density..),colour="black", fill="gray80", binwidth=0.5) +
stat_function(fun = dnorm,
colour="black",
size=1.1,
args =list(mean = mean(x$log.fe), sd = sd(x$log.fe))) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(aes(y=..density..),colour="black", fill="gray80", binwidth=0.8) +
stat_function(fun = dnorm,
colour="black",
size=1.1,
args =list(mean = mean(x$log.fe), sd = sd(x$log.fe))) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
theme_jack <- function (base_size = 12, base_family = "") {
theme_gray(base_size = base_size, base_family = base_family) %+replace%
theme(
axis.text = element_text(colour = "black"),
axis.title.x = element_text(colour = "Black"),
axis.title.y = element_text(colour = "Black", angle=45),
panel.background = element_rect(fill="gray95"),
panel.grid.minor.y = element_line(size=4),
panel.grid.major = element_line(colour = "gray95"),
plot.background = element_rect(fill="white")
)
}
theme_set(theme_jack())
lapply(F, function(x){
ggplot(data=x,
aes(x = log.fe)) +
geom_histogram(aes(y=..density..),colour="black", fill="gray80", binwidth=0.75) +
stat_function(fun = dnorm,
colour="black",
size=1.1,
args =list(mean = mean(x$log.fe), sd = sd(x$log.fe))) +
ylab("Frequenza") +
xlab("log(Concentrazione)")
})
source('~/R/spaziale/ferro_lombardia/grafici.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
lapply(F,FUN=str)
lapply(F,FUN=function(x){str(x$log.fe)})
i <- 1
require(geoR)
#for (i in 1:5){
t <- F[[i]]
# rendilo geodata
# d1 Ã¨ un df (x,y, data) a cui sovraimponiamo le coordinate per costruire gli scatter
# laggati
d1 <- t
geot <- as.geodata(t, coords.col=1:2, data.col=4) # con il logar. col 4
require(sp)
require(spatstat)
require(gstat)
coordinates(d1) <- ~x+y
w <- convexhull.xy(t$x, t$y)
pattern<- as.ppp(X=(cbind(t$x, t$y)), W=w)
map
plot(map)
w <- as.owin(map)
points(ppp)
points(patter)
points(pattern)
points(pattern, pch=19, cex=4)
points(pattern, pch=19, cex=1)
plot(map)
points(pattern, pch=19, cex=1)
points(pattern, pch=19, cex=.8)
points(pattern, pch=19, cex=1)
plot(map)
points(pattern, pch=19, cex=.8)
points(pattern, pch=19, cex=.8, color="grey95")
points(pattern, pch=19, cex=.8, col="grey95")
points(pattern, pch=19, cex=.8, col="grey75")
?hist
wide
names(wide)
as.ppp(X=F[[2]][,1:2])
as.ppp(X=F[[2]][,1:2], w)
pp <- ppp(x=F[[2]][,1], y=F[[1]][,2], window=w, marks=F[[2]]$log.fe)
plot(pp)
pp <- ppp(x=F[[2]][,1], y=F[[1]][,2], window=as.owin(map), marks=std(F[[2]]$log.fe))
pp
(plot(pp))
plot(pp)
plot(map)
points(pp)
require(spatstat)
require(Sp)
require(sp)
require(spdep)
nb2listw(knn2nb(knn=knearneigh(pp, 5)))
nb2listw(knn2nb(knn=knearneigh(x=pp, k=6)))
pp
knearneigh(pp,5)
pp <- ppp(x=F[[2]][,1], y=F[[1]][,2], window=as.owin(map))
pp <- ppp(x=F[[2]][,1], y=F[[2]][,2], window=as.owin(map))
pp <- ppp(x=F[[2]][,1], y=F[[2]][,2], window=as.owin(map), marks=std(F[[2]]$log.fe))
??standardize
pp <- ppp(x=F[[2]][,1], y=F[[2]][,2], window=as.owin(map), marks=scale(F[[2]]$log.fe))
nb2listw(knn2nb(knn=knearneigh(pp, 5)))
str(pp)
pp <- ppp(x=F[[2]][,1], y=F[[2]][,2], window=as.owin(map))
nb2listw(knn2nb(knn=knearneigh(pp, 5)))
nb2listw(knn2nb(knn=knearneigh(x=pp, k=2)))
nb2listw(knn2nb(knn=knearneigh(x=pp)))
nb2listw(knn2nb(knn=knearneigh(x=c(F[[2]][,1],F[[2]][,2]))))
nb2listw(knn2nb(knn=knearneigh(x=as.matrix(F[[2]][,1],F[[2]][,2]))))
nb2listw(knn2nb(knn=knearneigh(x=(as.matrix(F[[2]][,1],F[[2]][,2])[,1:2])))
)
?knearneigh
knearneigh
?knn
coordinates(pp)
?str(pp)
str(pp)
typeof(pp)
class(pp)
?ppp
SpatialPointsDataFrame(coords=c(F[[2]][,1],F[[2]][,2]))
SpatialPointsDataFrame(coords=coordinates(c(F[[2]][,1],F[[2]][,2])))
?coordinates
p2009 <- data.frame(x=F[[2]][,1], y=F[[2]][,2])
p2009
head(p2009)
coordinates(p2009) <- ~x+y
coordinates(p2009)
str(p2009)
p2009 <- data.frame(x=F[[2]][,1], y=F[[2]][,2], log.fe=F[[2]]$log.fe)
coordinates(p2009) <- ~x+y
str(p2009)
plot(p2009)
knearneigh(p2009, 8)
install.packages('RANN')
p2009 <- data.frame(x=F[[2]][,1], y=F[[2]][,2], log.fe=scale(F[[2]]$log.fe))
coordinates(p2009) <- ~x+y
nb2listw(knn2nb(knn=knearneigh(x=(as.matrix(F[[2]][,1],F[[2]][,2])[,1:2])))
)
nb2listw(knn2nb(knn=knearneigh(x=pp, k=8)))
nb2listw(knn2nb(knn=knearneigh(x=p2009, k=8)))
localmoran(x=)
nb2listw(knn2nb(knn=knearneigh(x=p2009, k=8))) -> lw
localmoran(x=p2009$log.fe, listw=lw)
local <- localmoran(x=p2009$log.fe, listw=lw)$Ii
local <- localmoran(x=p2009$log.fe, listw=lw)$"Ii"
local <- localmoran(x=p2009$log.fe, listw=lw)
str(local)
local$Ii
local
lm <- localmoran(x=p2009$log.fe, listw=lw)
lm$"Z.Ii"
lm[,3]
names(lm)
typeof(l)
typeof(lm)
localm <- localmoran(x=p2009$log.fe, listw=lw)
typeof(lm)
typeof(localm)
head(localm)
localm <- localmoran(x=p2009$log.fe, listw=lw)[,5]
cut(localm,breaks=c(0, .05), labels=c("sig", "nsig"))
cut(localm,breaks=c(0, .05), labels=c("sig"))
cut(localm,breaks=c(0, .05), labels=c("sig","ns"))
?cut
cut(localm,breaks=c(0, 0.05, +Inf), labels=c("sig","ns"))
head(localm)
localmoran(x=p2009$log.fe, listw=lw)[,5]
head(localmoran(x=p2009$log.fe, listw=lw))
cut(localm,breaks=c(0, 0.05, +Inf), labels=c("Outlier"))
cut(localm,breaks=c(0, 0.05), labels=c("Outlier"))
pvals <- localmoran(x=p2009$log.fe, listw=lw)[,5]
p2009$outl <- cut(pvals,breaks=c(0, 0.05), labels=c("Outlier"))
plot(map)
points(p2009)
plot(map)
points(p2009, pch=19, cex=.8, col="grey70", by=p2009$out)
?points
points(p2009, pch=19, cex=.8, col=p2009$out)
plot(map)
points(p2009, pch=19, cex=.8, col=p2009$out)
points(p2009, pch=19, cex=.8, col=p2009$outl)
qplot(p2009)
points(p2009, pch=19, cex=.8, col=p2009$outl)
nb2listw(knn2nb(knn=knearneigh(x=p2009, k=8))) -> lw
pvals <- localmoran(x=p2009$log.fe, listw=lw)[,5]
p2009$outl <- cut(pvals,breaks=c(0, 0.05, +Inf), labels=c("Outlier", "0"))
points(p2009, pch=19, cex=.8, col=p2009$outl)
plot(map)
source.with.encoding('~/R/spaziale/ferro_lombardia/ferro.R', encoding='UTF-8', echo=TRUE)
palette(c("red", "grey80"))
### local moran for point pattern
### p.es 2010
### spdep richiede che l'oggetto sia in formato spatialpoints
p2009 <- data.frame(x=F[[2]][,1], y=F[[2]][,2], log.fe=scale(F[[2]]$log.fe))
coordinates(p2009) <- ~x+y
# OK!
nb2listw(knn2nb(knn=knearneigh(x=p2009, k=8))) -> lw
pvals <- localmoran(x=p2009$log.fe, listw=lw)[,5]
p2009$outl <- cut(pvals,breaks=c(0, 0.05, +Inf), labels=c("Outlier", "0"))
source('~/.active-rstudio-document', echo=TRUE)
plot(map)
points(p2009, pch=19, cex=.8, col=p2009$outl)
data(cars)
ls()
cars$speed
lm(cars$speed ~ cars$dist)
mod \/ lm(cars$speed ~ cars$dist)
mod <- lm(cars$speed ~ cars$dist)
plot(mod)
library(spdep)
?library
library(nnet)
library(nnet, splines)
library(nnet, spatstat)
nnet
ls
?try
try(log("a"))
options(show.error.messages=F)
options(show.error.messages=FALSE)
try(log("a"))
print(.Last.Value)
print(.Last.value)
example(try)
L <- vector(20, "list")
L <- vector("list", 20)
L
set.seed(123)
for(i in 1:20){L[i] <- data.frame(x=(rnorm(50), y=rnorm(50)))}
data.frame(a=c(1:23), b=c(1:23)
)
for(i in 1:20){L[i] <- data.frame(x=rnorm(50), y=rnorm(50))}
warnings()
L
for(i in 1:20){L[[i]] <- data.frame(x=(rnorm(50), y=rnorm(50)))}
for(i in 1:20){L[[i]] <- data.frame(x=rnorm(50), y=rnorm(50))}
set.seed(123)
for(i in 1:20){L[[i]] <- data.frame(x=rnorm(50), y=rnorm(50))}
for(i in 1:20){cor(L[[i]]$x, L[[i]]$y)}
for(i in 1:20){print(cor(L[[i]]$x, L[[i]]$y))}
?cor
for(i in 1:20){print(cor.test(L[[i]]$x, L[[i]]$y)$p.val)}
?cor.test
for(i in 1:20){print(cor.test(L[[i]]$x, L[[i]]$y)$p.value)}
for(i in 1:20){L[[i]] <- data.frame(x=rnorm(50), y=rnorm(50))}
for(i in 1:20){print(cor.test(L[[i]]$x, L[[i]]$y)$p.value)}
par(mfrow=c(5,4))
for(i in 1:20){plot(F[[i]]$x, F[[i]]$y)}
par(mfrow=c(4,5))
for(i in 1:20){plot(F[[i]]$x, F[[i]]$y)}
F[[1]]
par(mfrow=c(4,5))
for(i in 1:20){plot(L[[i]]$x, L[[i]]$y)}
for(i in 1:20){print(cor.test(L[[i]]$x, L[[i]]$y)$p.value)}
data <- L[[5]]
lm(data$y ~data$x)
m1 <-lm(data$y ~data$x)
m1
m1$coefficients
summary(m1)
data <- L[[6]]
m2 <-lm(data$y ~data$x)
summary(m2)
plot(data)
par(mfrow=c(1,1))
plot(data)
abline(m2)
summary(m2)
plot(m2)
